<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="Monopoly">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../../Developer/Applications/eclipse/"/>
    <property name="junit.output.dir" value="build"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Monopoly.classpath">
        <pathelement location="bin"/>
        <pathelement location="libs/hamcrest-core-1.3.jar"/>
        <pathelement location="libs/junit-4.12.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Monopoly.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="edu.towson.cis.cosc442.project1.monopoly">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.CardsTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.CellInfoFormatterTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GainMoneyCardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GameMasterTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GameboardCreationTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GameboardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GoToJailCardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.LoseMoneyCardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.MovePlayerCardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.PlayerTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.PropertyCellTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.RailRoadCellTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.TradeDealTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.UtilityCellTest" todir="${junit.output.dir}"/>
            <classpath refid="Monopoly.classpath"/>
        </junit>
    </target>
    <target name="Monopoly">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.CardsTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.CellInfoFormatterTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GainMoneyCardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GameMasterTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GameboardCreationTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GameboardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.GoToJailCardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.LoseMoneyCardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.MovePlayerCardTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.PlayerTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.PropertyCellTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.RailRoadCellTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.TradeDealTest" todir="${junit.output.dir}"/>
            <test name="edu.towson.cis.cosc442.project1.monopoly.UtilityCellTest" todir="${junit.output.dir}"/>
            <classpath refid="Monopoly.classpath"/>
        </junit>
    </target>
    <target name="New_configuration">
        <java classname="edu.towson.cis.cosc442.project1.monopoly.gui.Main" failonerror="true" fork="yes">
            <classpath refid="Monopoly.classpath"/>
        </java>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
    <taskdef name="pitest" classname="org.pitest.ant.PitestTask" classpathref="pit.path" />
    	<target name="mutationCoverage">
        	<pitest
            	pitClasspath="pit.path"
              	classPath="mutation.path"
              	targetClasses="com.yourcodebase.*"
              	targetTests="com.yourcodebase.*"
              	reportDir="pathToWhereYouWantOutput"
              	sourceDir="pathToYourSource"/>
	</target>

</project>
